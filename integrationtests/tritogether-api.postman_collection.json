{
	"info": {
		"_postman_id": "c0f5dd7b-1743-4d83-ae7b-3d1244ba8cc8",
		"name": "tritogether-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create a coach",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "317968ef-610a-4f58-86f1-aebda47cb4f3",
						"exec": [
							"pm.test(\"Create user id variable\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"coachId\", jsonData.id);",
							"});",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Integration Test Coach\",\r\n\t\"email\": \"coach@citest.com\",\r\n\t\"password\": \"_TriTogether20_\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/coaches",
					"host": [
						"{{url}}"
					],
					"path": [
						"coaches"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a coach 400 email exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "317968ef-610a-4f58-86f1-aebda47cb4f3",
						"exec": [
							"pm.test(\"Error email exists\", function () {",
							"    pm.response.to.have.body(\"The specified e-mail address already exists\");",
							"});",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Integration Test Coach\",\r\n\t\"email\": \"coach@citest.com\",\r\n\t\"password\": \"_TriTogether20_\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/coaches",
					"host": [
						"{{url}}"
					],
					"path": [
						"coaches"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtain JWT token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "317968ef-610a-4f58-86f1-aebda47cb4f3",
						"exec": [
							"pm.test(\"Create user id variable\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"jwtToken\", \"Bearer \"+jsonData.access_token);",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"email\": \"coach@citest.com\",\r\n\t\"password\": \"_TriTogether20_\",\r\n\t\"isCoach\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/signin",
					"host": [
						"{{url}}"
					],
					"path": [
						"signin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a coach with wrong email",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "317968ef-610a-4f58-86f1-aebda47cb4f3",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Email is not valid\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"email must be an email\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Integration Test Coach\",\r\n\t\"email\": \"coach@citest\",\r\n\t\"password\": \"_TriTogether20_\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/coaches",
					"host": [
						"{{url}}"
					],
					"path": [
						"coaches"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a coach with missing name",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "317968ef-610a-4f58-86f1-aebda47cb4f3",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Name is missing\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"name must be longer than or equal to 5 characters\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"email\": \"user@citest.com\",\r\n\t\"password\": \"_TriTogether20_\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/coaches",
					"host": [
						"{{url}}"
					],
					"path": [
						"coaches"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a coach with invalid password 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "317968ef-610a-4f58-86f1-aebda47cb4f3",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Password is not valid\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"The specified password must be at least 8 characters long\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Integration Test Coach\",\r\n\t\"email\": \"coach@citest.com\",\r\n\t\"password\": \"_Tri_\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/coaches",
					"host": [
						"{{url}}"
					],
					"path": [
						"coaches"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a coach",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "317968ef-610a-4f58-86f1-aebda47cb4f3",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{jwtToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Integration Test Coach\",\r\n\t\"email\": \"coach@citest.com\",\r\n\t\"password\": \"_TriTogether20_\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/coaches/{{coachId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"coaches",
						"{{coachId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a coach with missing email",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "317968ef-610a-4f58-86f1-aebda47cb4f3",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Email is missing\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"email must be longer than or equal to 10 characters\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{jwtToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Integration Test Coach\",\r\n\t\"password\": \"_TriTogether20_\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/coaches/{{coachId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"coaches",
						"{{coachId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a different coach 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "317968ef-610a-4f58-86f1-aebda47cb4f3",
						"exec": [
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"pm.test(\"Coach can only be updated by its own user\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"A coach can only be updated by its own user\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{secondaryJwtToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Integration Test Coach\",\r\n\t\"email\": \"coach@citest.com\",\r\n\t\"password\": \"_TriTogether20_\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/coaches/{{coachId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"coaches",
						"{{coachId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update unexisting coach 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "317968ef-610a-4f58-86f1-aebda47cb4f3",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"The coach you are trying to update doesn't exist in the db\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"The coach you are trying to update doesn't exist in the db\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{secondaryJwtToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Integration Test Coach\",\r\n\t\"email\": \"coach@citest.com\",\r\n\t\"password\": \"_TriTogether20_\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/coaches/0",
					"host": [
						"{{url}}"
					],
					"path": [
						"coaches",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get coach",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a3d18402-eb02-4ec5-a3b6-486af7a84f88",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Coach is created and can be fetched successfully\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.email).to.eql(\"coach@citest.com\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{jwtToken}}"
					}
				],
				"url": {
					"raw": "{{url}}/coaches/{{coachId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"coaches",
						"{{coachId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get unexisting coach 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a3d18402-eb02-4ec5-a3b6-486af7a84f88",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Coach is not in the DB\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"The coach you are trying to retrieve doesn't exist in the db\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{jwtToken}}"
					}
				],
				"url": {
					"raw": "{{url}}/coaches/0",
					"host": [
						"{{url}}"
					],
					"path": [
						"coaches",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get coaches",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f43684e7-b04e-4b96-aa0d-2b8048dbe839",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{jwtToken}}"
					}
				],
				"url": {
					"raw": "{{url}}/coaches",
					"host": [
						"{{url}}"
					],
					"path": [
						"coaches"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete coach forbidden 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "13411841-ded9-4732-a497-8304b56ef036",
						"exec": [
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"A coach can only be deleted by its own user\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"A coach can only be deleted by its own user\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{secondaryJwtToken}}"
					}
				],
				"url": {
					"raw": "{{url}}/coaches/{{coachId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"coaches",
						"{{coachId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete unexisting coach 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "13411841-ded9-4732-a497-8304b56ef036",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"The coach you are trying to delete doesn't exist in the db\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"The coach you are trying to delete doesn't exist in the db\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{jwtToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/coaches/0",
					"host": [
						"{{url}}"
					],
					"path": [
						"coaches",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete created coach",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "326f52fa-5ee4-4d89-b353-23163fe20fde",
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{jwtToken}}"
					}
				],
				"url": {
					"raw": "{{url}}/coaches/{{coachId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"coaches",
						"{{coachId}}"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}